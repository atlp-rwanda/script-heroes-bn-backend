{
  "openapi": "3.0.0",
  "info": {
    "title": "Barefoot Nomad",
    "description": "Documentation for Script Heroes' project(Barefoot Nomad)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Users routes"
    },
    {
      "name": "Requests",
      "description": "requests routes"
    },
    {},
    {
      "name": "Profile",
      "description": "profile routes"
    },
    {
      "name": "Accomodations",
      "description": "accomodation routes"
    },
    {
      "name": "Locations",
      "description": "location routes"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "description": "Creates a new user in database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created new user"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "Login to barefoot nomad",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "email@test.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "example": "jwttoken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/forgotPassword": {
      "post": {
        "description": "Forgot password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "email@test.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "example": "jwttoken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/resetPassword/{token}": {
      "post": {
        "description": "Reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "password123"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newPassword": {
                      "type": "string",
                      "example": "password123"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "description": "Logout to barefoot nomad",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": "Logout success"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "tags": ["Profile"],
        "description": "Obtain profile information of users from the database",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "responses": {
            "200": {
              "description": "Successful  pull of user updated info",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Updated Profile"
                  }
                }
              }
            },
            "404": {
              "description": "User with provided email not found"
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Access denied"
            }
          }
        }
      }
    },
    "/api/profile/update": {
      "put": {
        "tags": ["Profile"],
        "description": "Update profile information of logged in user",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first name": {
                    "type": "string",
                    "example": "JOHN"
                  },
                  "last name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male"
                  },
                  "birthdate": {
                    "type": "date",
                    "example": "1856-02-09"
                  },
                  "language": {
                    "type": "string",
                    "example": "English"
                  },
                  "currency": {
                    "type": "string",
                    "example": "US$"
                  },
                  "country": {
                    "type": "string",
                    "example": "Rwanda"
                  },
                  "role": {
                    "type": "string",
                    "example": "Software Developer"
                  },
                  "department": {
                    "type": "string",
                    "example": "IT"
                  },
                  "linemanager": {
                    "type": "string",
                    "example": "JANE Doe"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfuly updated user profile info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updated Profile"
                }
              }
            }
          },
          "404": {
            "description": "User with profided email not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          },
          "401": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/profile/complete": {
      "put": {
        "tags": ["Profile"],
        "description": "complete profile information of logged in user after succesful registration",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gender": {
                    "type": "string",
                    "example": "Male"
                  },
                  "birthdate": {
                    "type": "date",
                    "example": "1856-02-09"
                  },
                  "language": {
                    "type": "string",
                    "example": "Kinyarwanda"
                  },
                  "currency": {
                    "type": "string",
                    "example": "US$"
                  },
                  "country": {
                    "type": "string",
                    "example": "Rwanda"
                  },
                  "role": {
                    "type": "string",
                    "example": "Software Developer"
                  },
                  "department": {
                    "type": "string",
                    "example": "IT"
                  },
                  "linemanager": {
                    "type": "string",
                    "example": "JANE Doe"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successfuly completed user profile info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      }
    },
    "api/accommodations": {
      "post": {
        "tags": ["Accomodations"],
        "description": "Creating an accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "facilityName": {
                    "type": "string",
                    "example": "Peace view hotel"
                  },
                  "description": {
                    "type": "string",
                    "example": "Hotel located in Gisenyi town"
                  },
                  "locationId": {
                    "type": "integer",
                    "example": 4
                  },
                  "roomType": {
                    "type": "string",
                    "example": "Classic"
                  },
                  "photoUrl": {
                    "type": "string",
                    "example": "http://photourl"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Accommodation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accommodation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      },
      "get": {
        "tags": ["Accomodations"],
        "description": "Getting an accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Get all accommodations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accommodation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      }
    },
    "api/accommodations/{id}": {
      "put": {
        "tags": ["Accomodations"],
        "description": "Updating an accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "facilityName": {
                    "type": "string",
                    "example": "Peace view hotel"
                  },
                  "description": {
                    "type": "string",
                    "example": "Hotel located in Gisenyi town"
                  },
                  "locationId": {
                    "type": "integer",
                    "example": 4
                  },
                  "photoUrl": {
                    "type": "string",
                    "example": "http://photourl"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Accommodation updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accommodation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      },
      "get": {
        "tags": ["Accomodations"],
        "description": "Getting a single accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Get a single accommodation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accommodation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      },
      "delete": {
        "tags": ["Accomodations"],
        "description": "Deleting an accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Accommodation deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Accommodation deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      }
    },
    "api/accommodations/{id}/rooms": {
      "post": {
        "tags": ["Accomodations"],
        "description": "Creating room in an accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accomodationId": {
                    "type": "integer",
                    "example": 4
                  },
                  "roomType": {
                    "type": "string",
                    "example": "Classic"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/room"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      },
      "get": {
        "tags": ["Accomodations"],
        "description": "Getting room in an accommodation",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authenticated admin",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Get all accommodations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Access denied"
          }
        }
      }
    },
    "/api/request-types": {
      "get": {
        "tags": ["Requests"],
        "description": "request types",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "headers",
            "description": "authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/trips": {
      "get": {
        "tags": ["Requests"],
        "description": "get all individual requests",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "headers",
            "description": "authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "not found"
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/api/trips/{id}": {
      "get": {
        "tags": ["Requests"],
        "description": "get an individual request by id",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "headers",
            "description": "authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "a request id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "delete": {
        "tags": ["Requests"],
        "description": "delete a request by id",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "headers",
            "description": "authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "a request id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/api/trips/multi-city": {
      "post": {
        "tags": ["Requests"],
        "description": "add a multi-city trip request",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "$ref": "#/components/schemas/Trip"
            }
          }
        },
        "required": true
      },
      "responses": {
        "201": {
          "description": "Successfuly created a request"
        },
        "400": {
          "description": "Bad request"
        }
      }
    },
    "/api/trips/return-trip": {
      "post": {
        "tags": ["Requests"],
        "description": "add a return trip request",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "$ref": "#/components/schemas/Trip"
            }
          }
        },
        "required": true
      },
      "responses": {
        "201": {
          "description": "Successfuly created a request"
        },
        "400": {
          "description": "Bad request"
        }
      }
    },
    "/api/locations": {
      "get": {
        "tags": ["Locations"],
        "description": "get all locations",
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "post": {
        "tags": ["Locations"],
        "description": "create a location",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "a token for authentication",
            "required": true,
            "type": "string"
          }
        ]
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "required": true
      },
      "responses": {
        "201": {
          "description": "success"
        },
        "400": {
          "description": "bad request"
        }
      }
    },
    "/api/locations/{id}": {
      "get": {
        "tags": ["Locations"],
        "description": "get a location by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a request id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "description": "delete a location",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "headers",
            "description": "authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "a location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "400": {
            "description": "bad request"
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "description": "update a location",
        "parameters": [
          {
            "name": "x-auth-token",
            "in": "headers",
            "description": "authentication token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "a location id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "array",
        "description": "Array of users info",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "user name": {
            "type": "string",
            "example": "user name"
          },
          "user email": {
            "type": "string",
            "example": "email@test.com"
          }
        },
        "description": "Model containing user info"
      },
      "Profile": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "first name": {
            "type": "string",
            "example": "JOHN"
          },
          "last name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "email@test.com"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "birthdate": {
            "type": "date",
            "example": "1856-02-09"
          },
          "language": {
            "type": "string",
            "example": "Kinyarwanda"
          },
          "currency": {
            "type": "string",
            "example": "US$"
          },
          "country": {
            "type": "string",
            "example": "Rwanda"
          },
          "role": {
            "type": "string",
            "example": "Software Developer"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "linemanager": {
            "type": "string",
            "example": "JANE Doe"
          }
        },
        "description": "Model containing user profile info"
      },
      "Updated Profile": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "first name": {
            "type": "string",
            "example": "JOHN"
          },
          "last name": {
            "type": "string",
            "example": "Doe"
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "birthdate": {
            "type": "date",
            "example": "1856-02-09"
          },
          "language": {
            "type": "string",
            "example": "English"
          },
          "currency": {
            "type": "string",
            "example": "US$"
          },
          "country": {
            "type": "string",
            "example": "Rwanda"
          },
          "role": {
            "type": "string",
            "example": "Software Developer"
          },
          "department": {
            "type": "string",
            "example": "IT"
          },
          "linemanager": {
            "type": "string",
            "example": "JANE Doe"
          }
        },
        "description": "Model containing user profile info"
      },
      "room": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "accomodationId": {
            "type": "integer",
            "example": 4
          },
          "isBooked": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "accommodation": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "locationId": {
            "type": "integer",
            "example": 1
          },
          "facilityName": {
            "type": "string",
            "example": "Peace view hotel"
          },
          "description": {
            "type": "string",
            "example": "Hotel located in Gisenyi town"
          },
          "rooms": {
            "type": "array",
            "description": "Array of users info",
            "items": {
              "$ref": "#/components/schemas/room"
            }
          }
        }
      },
      "Trip": {
        "properties": {
          "origin": {
            "type": "integer"
          },
          "destination": {
            "type": "integer"
          },
          "from": {
            "type": "string"
          },
          "till": {
            "type": "string"
          }
        },
        "description": "Trip Model"
      },
      "Location": {
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "description": "Location Model"
      }
    }
  },
  "Oneway Trip": {
    "properties": {
      "id": {
        "type": "integer",
        "example": 4
      },
      "origin": {
        "type": "integer",
        "example": "3"
      },
      "destination": {
        "type": "integer",
        "example": "5"
      },
      "from": {
        "type": "date",
        "example": "2020-02-01"
      },
      "till": {
        "type": "date",
        "example": "2020-10-01"
      },
      "tripReason": {
        "type": "string",
        "example": "Vacation"
      }
    },
    "description": "Trip booking model"
  }
}
